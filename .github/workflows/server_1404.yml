name: "[collab-vm-server] GCC 5 - Ubuntu 14.04"

on:
    push:
        branches: [ master, unstable ]
    pull_request:
        branches: [ master ]

jobs:
  check_skip:
    runs-on: ubuntu-16.04
    outputs:
      skip: ${{ steps.result_step.outputs.result }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: mstachniuk/ci-skip@master
        with:
          commit-filter: '[skip ci];[ci skip];[no ci];[no 1404];[only 1604];[only 1804];[only 2004]'
          commit-filter-separator: ';'
      - run: echo "::set-output name=result::${CI_SKIP}"
        id: result_step

  build_png:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.skip == 'false' }}
    runs-on: ubuntu-16.04
    container: ubuntu:14.04

    steps:
    - uses: actions/checkout@v2
    - name: Upgrade APT
      run: |
        sudo apt update
        sudo apt install wget libc6-dev gcc-4.8 g++-4.8
        wget http://snapshot.debian.org/archive/debian/20150821T213547Z/pool/main/a/apt/apt_1.0.10.2.tar.xz
        tar -xvf apt_1.0.10.2.tar.xz
        cd apt-1.0.10.2
        ./configure
        make
        sudo make install
    - name: Install dependencies
      run: |
        sudo printf "\ndeb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main" >> /etc/apt/sources.list
        sudo printf "\ndeb-src http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main" >> /etc/apt/sources.list
        sudo apt update
        ./scripts/grab_deps_linux.sh 
    - name: Make PNG build      
      run: |
        make -j$(nproc) NO_NATIVE=1
    - name: Upload Artifact - PNG
      uses: 'actions/upload-artifact@v2'
      with:
        name: Server Binary - PNG
        path: './bin/**/*'

  build_jpeg:
    needs: check_skip
    if: ${{ needs.check_skip.outputs.skip == 'false' }}
    runs-on: ubuntu-16.04
    container: ubuntu:14.04

    steps:
    - uses: actions/checkout@v2
    - name: Upgrade APT
      run: |
        sudo apt update
        sudo apt install wget libc6-dev gcc-4.8 g++-4.8
        wget http://snapshot.debian.org/archive/debian/20150821T213547Z/pool/main/a/apt/apt_1.0.10.2.tar.xz
        tar -xvf apt_1.0.10.2.tar.xz
        cd apt-1.0.10.2
        ./configure
        make
        sudo make install
    - name: Install dependencies
      run: |
        sudo printf "\ndeb http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main" >> /etc/apt/sources.list
        sudo printf "\ndeb-src http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu trusty main" >> /etc/apt/sources.list
        sudo apt update
        ./scripts/grab_deps_linux.sh 
    - name: Make JPEG build
      run: |
        make -j$(nproc) JPEG=1 NO_NATIVE=1
    - name: Upload Artifact - JPEG
      uses: 'actions/upload-artifact@v2'
      with:
        name: Server Binary - JPEG
        path: './bin/**/*'
    - name: "Bonus: compile odb .cxx files"
      run: |
          mkdir odbout
          odb -d sqlite -o odbout -s -q src/Database/VMSettings.h -DUSE_JPEG
          odb -d sqlite -o odbout -s -q src/Database/Config.h -DUSE_JPEG
    - name: Upload Artifact - ODB files
      uses: 'actions/upload-artifact@v2'
      with:
        name: ODB files for building locally (JPEG Only)
        path: './odbout/*'